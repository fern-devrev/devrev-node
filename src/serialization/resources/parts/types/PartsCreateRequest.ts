/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../../../core";
import * as serializers from "../../..";
import { DevRev } from "@fern-api/devrev";

const _Base = core.serialization.object({
    description: core.serialization.string().optional(),
    name: core.serialization.string().optional(),
    ownedBy: core.serialization.property("owned_by", core.serialization.list(core.serialization.string())),
});
export const PartsCreateRequest: core.serialization.Schema<
    serializers.PartsCreateRequest.Raw,
    DevRev.PartsCreateRequest
> = core.serialization
    .union("type", {
        capability: core.serialization
            .lazyObject(async () => (await import("../../..")).PartsCreateRequestCapability)
            .extend(_Base),
        feature: core.serialization
            .lazyObject(async () => (await import("../../..")).PartsCreateRequestFeature)
            .extend(_Base),
        product: core.serialization
            .lazyObject(async () => (await import("../../..")).PartsCreateRequestProduct)
            .extend(_Base),
    })
    .transform<DevRev.PartsCreateRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PartsCreateRequest {
    type Raw = PartsCreateRequest.Capability | PartsCreateRequest.Feature | PartsCreateRequest.Product;

    interface Capability extends _Base, serializers.PartsCreateRequestCapability.Raw {
        type: "capability";
    }

    interface Feature extends _Base, serializers.PartsCreateRequestFeature.Raw {
        type: "feature";
    }

    interface Product extends _Base, serializers.PartsCreateRequestProduct.Raw {
        type: "product";
    }

    interface _Base {
        description?: string | null;
        name?: string | null;
        owned_by: string[];
    }
}
