/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../core";
import * as serializers from "..";
import * as DevRev from "../../api";

const _Base = core.serialization.object({
    object: core.serialization.string(),
    type: core.serialization.lazy(async () => (await import("..")).TimelineEntriesCreateRequestType),
    visibility: core.serialization.lazy(async () => (await import("..")).TimelineEntryVisibility).optional(),
});
export const TimelineEntriesCreateRequest: core.serialization.Schema<
    serializers.TimelineEntriesCreateRequest.Raw,
    DevRev.TimelineEntriesCreateRequest
> = core.serialization
    .union("type", {
        timeline_comment: core.serialization
            .lazyObject(async () => (await import("..")).TimelineEntriesCreateRequestTimelineComment)
            .extend(_Base),
    })
    .transform<DevRev.TimelineEntriesCreateRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TimelineEntriesCreateRequest {
    type Raw = TimelineEntriesCreateRequest.TimelineComment;

    interface TimelineComment extends _Base, serializers.TimelineEntriesCreateRequestTimelineComment.Raw {
        type: "timeline_comment";
    }

    interface _Base {
        object: string;
        type: serializers.TimelineEntriesCreateRequestType.Raw;
        visibility?: serializers.TimelineEntryVisibility.Raw | null;
    }
}
