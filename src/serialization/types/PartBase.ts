/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as DevRev from "../../api";
import * as core from "../../core";

export const PartBase: core.serialization.ObjectSchema<serializers.PartBase.Raw, DevRev.PartBase> =
    core.serialization.object({
        artifacts: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).ArtifactSummary))
            .optional(),
        description: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        ownedBy: core.serialization.property(
            "owned_by",
            core.serialization.list(core.serialization.lazy(async () => (await import("..")).UserSummary)).optional()
        ),
        tags: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).TagWithValue))
            .optional(),
    });

export declare namespace PartBase {
    interface Raw {
        artifacts?: serializers.ArtifactSummary.Raw[] | null;
        description?: string | null;
        name?: string | null;
        owned_by?: serializers.UserSummary.Raw[] | null;
        tags?: serializers.TagWithValue.Raw[] | null;
    }
}
