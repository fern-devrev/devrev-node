/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as DevRev from "../../api";
import * as core from "../../core";

export const AuthConnection: core.serialization.Schema<serializers.AuthConnection.Raw, DevRev.AuthConnection> =
    core.serialization
        .union("type", {
            google_apps: core.serialization.lazyObject(
                async () => (await import("..")).AuthConnectionOptionsGoogleApps
            ),
            oidc: core.serialization.lazyObject(async () => (await import("..")).AuthConnectionOptionsOidc),
            samlp: core.serialization.lazyObject(async () => (await import("..")).AuthConnectionOptionsSaml),
            social: core.serialization.object({
                value: core.serialization.lazy(async () => (await import("..")).AuthConnectionOptionsSocial),
            }),
            waad: core.serialization.lazyObject(async () => (await import("..")).AuthConnectionOptionsAzureAd),
        })
        .transform<DevRev.AuthConnection>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace AuthConnection {
    type Raw =
        | AuthConnection.GoogleApps
        | AuthConnection.Oidc
        | AuthConnection.Samlp
        | AuthConnection.Social
        | AuthConnection.Waad;

    interface GoogleApps extends serializers.AuthConnectionOptionsGoogleApps.Raw {
        type: "google_apps";
    }

    interface Oidc extends serializers.AuthConnectionOptionsOidc.Raw {
        type: "oidc";
    }

    interface Samlp extends serializers.AuthConnectionOptionsSaml.Raw {
        type: "samlp";
    }

    interface Social {
        type: "social";
        value: serializers.AuthConnectionOptionsSocial.Raw;
    }

    interface Waad extends serializers.AuthConnectionOptionsAzureAd.Raw {
        type: "waad";
    }
}
