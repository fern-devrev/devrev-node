/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { DevRev } from "@fern-api/devrev";

export type WorksCreateRequest =
    | DevRev.WorksCreateRequest.Issue
    | DevRev.WorksCreateRequest.Ticket
    | DevRev.WorksCreateRequest._Unknown;

export declare namespace WorksCreateRequest {
    interface Issue extends DevRev.WorksCreateRequestIssue, _Utils {
        type: "issue";
    }

    interface Ticket extends DevRev.WorksCreateRequestTicket, _Utils {
        type: "ticket";
    }

    interface _Unknown extends _Utils {
        type: void;
    }

    interface _Utils {
        _visit: <_Result>(visitor: DevRev.WorksCreateRequest._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        issue: (value: DevRev.WorksCreateRequestIssue) => _Result;
        ticket: (value: DevRev.WorksCreateRequestTicket) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const WorksCreateRequest = {
    issue: (value: DevRev.WorksCreateRequestIssue): DevRev.WorksCreateRequest.Issue => {
        return {
            ...value,
            type: "issue",
            _visit: function <_Result>(
                this: DevRev.WorksCreateRequest.Issue,
                visitor: DevRev.WorksCreateRequest._Visitor<_Result>
            ) {
                return DevRev.WorksCreateRequest._visit(this, visitor);
            },
        };
    },

    ticket: (value: DevRev.WorksCreateRequestTicket): DevRev.WorksCreateRequest.Ticket => {
        return {
            ...value,
            type: "ticket",
            _visit: function <_Result>(
                this: DevRev.WorksCreateRequest.Ticket,
                visitor: DevRev.WorksCreateRequest._Visitor<_Result>
            ) {
                return DevRev.WorksCreateRequest._visit(this, visitor);
            },
        };
    },

    _unknown: (value: { type: string }): DevRev.WorksCreateRequest._Unknown => {
        return {
            ...(value as any),
            _visit: function <_Result>(
                this: DevRev.WorksCreateRequest._Unknown,
                visitor: DevRev.WorksCreateRequest._Visitor<_Result>
            ) {
                return DevRev.WorksCreateRequest._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: DevRev.WorksCreateRequest,
        visitor: DevRev.WorksCreateRequest._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case "issue":
                return visitor.issue(value);
            case "ticket":
                return visitor.ticket(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
